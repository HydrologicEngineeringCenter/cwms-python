name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  integration-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      # Docker Buildx caching steps
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set Up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.9.X'

      # Use actions-poetry to handle installation
      - name: Install Poetry and Dependencies
        uses: abatilo/actions-poetry@v4
        with:
          python-version: '3.9.X'
          # Poetry will handle installation and caching
      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/artifacts
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Build services (docker compose)
        env:
          DOCKER_BUILDKIT: 1
        run: |
          # Build service images using docker compose which uses each service's build.context/Dockerfile
          docker compose build --progress=plain --pull

      - name: Per-service Buildx caching (execute Python script)
        env:
          DOCKER_BUILDKIT: 1
        working-directory: .github/workflow_utils
        run: |
          # Install PyYAML to parse the compose file
          python -m pip install pyyaml
          # Execute the script
          python buildx_services.py

      - name: set up backend
        run: |
          docker compose pull
          docker compose up --build -d

      # Run pytest and generate coverage report data.
      - name: Run Tests and Check Types
        run: |
          poetry run pytest tests/cda/ --doctest-modules --cov --cov-report=xml:out/coverage.xml
          poetry run mypy --strict cwms/

      - name: Generate Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: out/coverage.xml
          format: markdown
          output: both
          badge: true

      - name: Generate Job Summary
        uses: x-color/github-actions-job-summary@v0.1.1
        with:
          file: ./code-coverage-results.md
          vars: |-
            empty: empty
